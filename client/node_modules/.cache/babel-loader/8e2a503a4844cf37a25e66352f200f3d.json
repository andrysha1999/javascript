{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/javascript/client/src/Registration.js\";\nimport React from 'react';\n\nclass Registration extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      login: String,\n      password: String,\n      confirmPassword: String,\n      date: Date\n    };\n  }\n\n  submit(event) {\n    fetch('http://localhost:3000/registration/', {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n      },\n      body: 'name=' + this.state.login + '&date=' + this.state.date + '&password=' + this.state.password\n    }).then(response => response.json()).then(result => {\n      this.setState({\n        token: result[\"token\"]\n      });\n      localStorage.setItem(\"token\", result[\"token\"]);\n      localStorage.setItem(\"authorized\", 1);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  componentDidMount() {}\n\n  render() {\n    if (localStorage.getItem(\"authorized\") == 1) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Already authorized\");\n    } else return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Registration\"), React.createElement(\"form\", {\n      id: \"registration\",\n      onSubmit: this.submit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"First name:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.login,\n      onChange: this.loginChange,\n      name: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Password:\"), React.createElement(\"input\", {\n      type: \"password\",\n      value: this.state.password,\n      onChange: this.passwordChange,\n      name: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Confirm password:\"), React.createElement(\"input\", {\n      type: \"password\",\n      value: this.state.confirmPassword,\n      onChange: this.confirmPasswordChange,\n      name: \"confirmPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Date\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"date\",\n      value: this.state.date,\n      onChange: this.dateChange,\n      name: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Registration;","map":{"version":3,"sources":["/home/ubuntu/javascript/client/src/Registration.js"],"names":["React","Registration","Component","state","login","String","password","confirmPassword","date","Date","submit","event","fetch","method","headers","body","then","response","json","result","setState","token","localStorage","setItem","catch","error","console","log","componentDidMount","render","getItem","loginChange","passwordChange","confirmPasswordChange","dateChange"],"mappings":"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","sourcesContent":["import React from 'react';\nclass Registration extends React.Component {\n  state = {\n    login: String,\n    password: String,\n    confirmPassword: String,\n    date: Date\n  }\n  submit(event) {\n    fetch('http://localhost:3000/registration/', {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n      },\n      body: 'name=' + this.state.login + '&date=' + this.state.date + '&password=' + this.state.password\n    })\n      .then(response => response.json())\n      .then(result => {\n        this.setState({ token: result[\"token\"] })\n        localStorage.setItem(\"token\", result[\"token\"])\n        localStorage.setItem(\"authorized\", 1)\n      })\n      .catch((error) => {\n        console.log(error)\n      })\n  }\n  componentDidMount() {\n\n  }\n  render() {\n    if (localStorage.getItem(\"authorized\") == 1) {\n      return (<div>\n        Already authorized\n      </div>)\n    }\n    else\n      return (<div>\n        <h2>Registration</h2>\n        <form id=\"registration\" onSubmit={this.submit}>\n          First name:<br></br>\n          <input type=\"text\" value={this.state.login} onChange={this.loginChange} name=\"name\"></input>\n          <p>Password:</p>\n          <input type=\"password\" value={this.state.password} onChange={this.passwordChange} name=\"password\"></input>\n          <p>Confirm password:</p>\n          <input type=\"password\" value={this.state.confirmPassword} onChange={this.confirmPasswordChange} name=\"confirmPassword\"></input>\n          <p>Date</p>\n          <p><input type=\"date\" value={this.state.date} onChange={this.dateChange} name=\"date\"></input></p>\n          <p><input type=\"submit\"></input></p>\n        </form>\n      </div>);\n  }\n\n}\nexport default Registration;"]},"metadata":{},"sourceType":"module"}